package day03

import kotlin.math.log2
import kotlin.math.pow

fun main() {
    solution1(input).also(::println)
    solution2(input).also(::println)
}

private fun solution1(serializedRucksacks: String) = serializedRucksacks.split("\n").sumOf { rucksack ->
    val length = rucksack.length
    val first = rucksack.substring(0, length / 2).encodePrioritiesBitwise()
    val second = rucksack.substring(length / 2, length).encodePrioritiesBitwise()

    log2(first.and(second).toDouble())
}.toInt()

private fun solution2(serializedRucksacks: String) = serializedRucksacks.split("\n")
    .windowed(3, 3)
    .sumOf { rucksackGroup ->
        val (first, second, third) = rucksackGroup.map { it.encodePrioritiesBitwise() }

        log2(first.and(second).and(third).toDouble())
    }.toInt()

private fun String.encodePrioritiesBitwise() = map { toPriority(it) }
    .fold(0L) { acc, next ->
        acc.or(2.0.pow(next).toLong())
    }

private fun toPriority(value: Char): Double {
    val adjustment = when (value.code) {
        in 65..90 -> 38.0
        in 97..122 -> 96.0
        else -> throw IllegalArgumentException("$value is not a valid Char for this test")
    }
    return value.code - adjustment
}

private val input = """
    PnJJfVPBcfVnnPnBFFcggttrtgCrjDtSjzSS
    llWlLbmmdLLwLbqGdmTmbZfCQtzrMQfrjSzrtSrMqgMt
    sHlZTsWZwGGlZmGTmdlZbhJNRPphVfRvVnRBsRsJJV
    fsHtVbjtqstBghhwwPBw
    SDQzzSzQrQMmmQlmlcNcJLZPgLrVZTdCddhgdPwwCw
    JmSWSVGGlJJbRsbpWHfbRj
    tJndRtwtddPvllvfrldrfPpHWDgglFDWWmMmHWmHpZlS
    BBJTTjCsJWZCmSHSZD
    LhqLcVzshTNjhqhcjLLTLjbTnGndfdwrfPRVRrdnwftQwJRv
    wHlPJZwbbZfqbFwqFZfrrcrJrtMWSMMVtVcJht
    NzzzNBjNfLzvGfDNjMhVhrrMShLchsRVLs
    DDdmmgBGDNdgfgZggnZbZHln
    jqNjZJqsGsRqJJqnlJJGzMzffcffTCfQcFmvcWfvTNfcvv
    PdhVdrwphhVtDdSPLmFCWTLFWWTfFQQr
    dSPwbbVdbpQllZMQbMjM
    QQdfflqvjTvfZqLMWfNDGhwsCNGGGM
    rzRRRTVTPTNhsDWDRhGC
    gHSTpTnppvjQgJjcql
    nzNvsFBBBFsNrnNBrvndfThwDbhVPzVVwhZZChpZPCbZ
    GMQQStmcHHmlfMtPwbZVVVVhhPhbVc
    GmSmMGlmWWgqQMHgQHtSvTNTTrgBBvNvFsfTfLvd
    VNVBgRRBRzWRRbRTrTBgbzpZvMvMJlQJZJpJvlTMdJlp
    mfdfdfdHfQplZJJh
    ttnPmsLHmqsPGgWjjWRbBdbbGj
    mMMzwFFpnwgMggSzhQSbSJbhWzbr
    NPRlHHPbPRdPHCdRNGWWhWQhJVVGhZrCCJ
    LlNbRllLLdHnpLgMTgTsDT
    mWhvwmthrzJrLhvftwPrtNHlbcHgbDzNDHcGgzllHl
    TCjdSCFMQCCCjMspCMQBMqpFHNGblPPnGNNbpnpccZGccclc
    jVBPsqdFMFsTVMsdMmfwhwvVwLrvWhVtJR
    TdhJJttgmdgctBBhBwBqBCLWqC
    fjNGPblpPlRDfsfGbfcWqBqwWvnHVvBLVHss
    lpRNDGjbrGfPZbmZZMFdTzTgcFdS
    WPLMvWLMqLcSvrrBmDPFfRzmDPRfZDHP
    dCggNCCdNCbHTHTfFnNHzM
    GlJVQjdCCwjMGbGpjGdCpqrtctqcttchsrLLcthlhc
    jgPHPgjGCwrqjqrvzBfFfCTTCdFpDD
    QhQLtcrQQLWshQttdzzvzBnhvvBhvFTv
    RJRssrQSWQSqjqqVSSGP
    sPszmnmnQPQbjSRVVjbRjVVB
    cdvZqMfNchMMMqCBlBZlmSmWCHBj
    dFFDqJNNJvTJTqvvwmGQsGwJztgrwsts
    dJGPMNStSclWJSPScMNMzqqDfzqVzwwjGfzjqfQz
    hppFbrhFrrhgCpFlFhvFTgrsDfsjVzvLDfqwVzzwQDsVwL
    RrgnZbphTpbgrnZgmpbhFcMlnWdMBNWJdtNJBMMSMc
    HqtfLZCLmLtrSqZStzFtwpPQWlNQBpplpQWmBpNp
    jMJcnRFcJjvjvcGvdJpBppBwQBpwQWPW
    DcvDgbhjMMsjGvcjRRvjvgbGtsTZFHCCHSCHZHLfsSsCSrZH
    wvFPFqvjlgTwjvjZbMSzHTSScMBBbN
    VVmpVsmmptfDsdSZbMzZzMZBtB
    LVhfGJVhQsWhVJhfmGJMwljFvqWrlPvCqrqjFFvj
    cdNbtwrtwrRNLzhQhHfCzbGzQH
    DMlMgFDBMSBjMTqMFWMFDQHdGZHvQdTHHvHzHChJJv
    MBVWDngVqVWlqqBgBjjcsPnwnNdNsPNPpRcLws
    pQqHsBmmrQHrrmsmmpwMdfdPbfWPMVbMdWbPwG
    ZSvZDlvghgSDZCSzJZzgZNNPFRFMVRVfMdbFPddfMzGRWR
    vWgJhSntvglSgDCHsjHBBpnTrTmjmB
    hDgmmgnwDCdddRCqCPzz
    sSslHbctbHsNrhpZqdqprc
    WbsHSBQHQBLHTWJSlmjnVwFDvWhnvjmfgv
    phwdhVLRddWJLVglLWRlWWgwhCjCrrrHZmCjZNHtjvvZrHTN
    zzFzPQqFDcFsHsFPHSsGSCCNmftjjNDjCfCCCNfvrr
    BSQsqFQMcPqHbcGzFMWgLlgwpLlpJLLpBwnp
    GTrsHGGHfGMvsrGsvnGcHsvTwhghwhpVpJhQpwhQghhmmm
    bFPFPPtSdPtSZPZWjSdZSNFdmhDJQgRQbQgmhJgJmRwVQMRh
    jPdjldqlSNBdFBjtFZsfsGMqsHCMcqcfvnrf
    crZHHZcZZsSrVrSCrBNTTpppBpJBCbwbBn
    DzhRggfhhlRghmBNBpLJwDpDDTNp
    qvwqwPRfvfzPPRvQlfPvPlRjZSHZrcScWrtVQscjjtZHMS
    GRGBgsgghbvRvgsBTsgRjjznCCtSVCZtCFZtzFtwnSdj
    cmqpPNnWWPrqWHplHDDcpCddFfZdFtdrwzrfdVFFdt
    lPNPNPcqpcHWmPLllDDGhbRbnMgLgRbvRsbhhg
    ZRBBNFWWBWPDZZprnwVvDD
    bSzzhHdttMtCCzCThMTShStcvrqNNjwnrcvqvvVVpprvnnpN
    CStdTMLztMmTSSMTSSSfBQNWlsFRJRPfmlNRNB
    pMLptvGHTSGSHtLLwNWvcqsJmWWzmPFFms
    nrQPrjrddgQlDPZjdlBcFFzFsFWhqWgshszhNW
    CZDCQjjBBjrnCfQCrZrbSbHLRwGftbfPbHRMfp
    sqQHBqsHbwDtmbSB
    GjVGrlsMsPjbPbPmTtSwDb
    lzFFGznLGGrLrnrVzMzsqvpqvWQcnNZWvCpnqpHc
    nZWZjdWRwhRdBRhhdNZMtHtpPrGCCGsrTGsG
    DzFFbblvbzFvVJzzzlVmvlpTpMpMrMCgGMtprJgCMrPM
    zVmFzFvfzSmDzmCmzmmVQwNRqdRhcWBqShjqNndWWj
    QQTdgLQlhGhQdPbwJJgwRVmtNRBV
    vCSnjzFqSDDFMDjvrqvjvnVBRsNJRpJwtNJNpNrtbtbt
    DfnCCjDMzcnqvHZGlcTcZThBlG
    lWtmssWNcBjTjhlLpn
    fwJbgfQfVfqPwmdgJjppHTjCphppBHCnhV
    bgvfmvmbqdfDqJvqgbPJNDNSMscNDtccDzzcNtRt
    ttBHSflTlqwGGQJBQq
    jvdPdPLsDvCzvVqVQQGw
    ZDdZnPrrPLPLZMZlfWSqmmTWmtTMtF
    ShhwCZSwlPwZPSplwlRGGVmttWVVQcJVnJtSJVLcjc
    qmzDmgNqNfgtJWWqtQLJqL
    rsFgvrmFdfRhPBRvRRPZ
    RQQRGJRpfJzlTQmbfbsGlsTMSHMPgcMFpgqPHHpHqqPpcP
    WmLZDBBLZLNVdjWqDCFHCMccSPgSgg
    thrNBVVBrWZNBWNrRGQbRtJGzlRRbmlf
    NfdjBfsnDfNjfBddNBnBwsQShzQDhSDhvZSRDpFRSVFQ
    lHrbTgtLmrblPzShhRpvRPZPVz
    tWbqHlHmWHgWHtqrLJJsvBwnBfjswjwnNMwf
    qQfdCVqZSqZmQmgVqCqCWTMcNFTwWwTccgpcWcpw
    nSLrjrJnLcTwLNcz
    sjRjSnJnRsBlPtnqCqCGfCbmQGHfCl
    tqSmNPNcVrNNmPtHfMZbCWMCZbHwfdzW
    RwgGvFwFdsssgjdb
    LnLhhnFDStLJSrtw
    HHGCHgfjgjgzNSTgJTDJ
    WdMbDBdQLLZPWZVZZmLdzqqNbvzswSzrqqsJwSNw
    QQmQBmWQZBmRPGfRjRcHccplpD
    zFpjDvzDzWWvWBqDqvQcjsfbHPjHsVjcPGffGc
    TttwldmlTPSCCZmhlNggwffhHsshRsGssRsfGHRhHf
    twmMMmltZdNNlZLLMrPWzrrprpDr
    ChCnpqhzCdndsDCnVpVJBgLTpTtgVggL
    swHPGmwHbjPjvjQsGLSgVMtgSLLTVBHSrg
    mRPPwvbvbvQjljvbPvPlfwWhsnhZDzFnWhDFdWcdhZWl
    ndnSZSfNgmmSZlbllglVVsBCfqFBfttpPFtsqV
    DJwcMzJDwLcMHMDRMRrtVWFWtCBqBWpWCzzP
    wvcHhRcTJJvTRLRvRhwTQTHdQjqqGdgnbGQgSbqSbgNSdl
    MHtvCFtCFvMvBDcVfjhhQf
    WJZWSgZbdlwZZsbTbwDhcBVQhmTTTcfRjmjD
    WwwrBwZsSJWwFttnLrMCpntn
    BJgWJVSPVzNJNPZPVHBJHBfdhbjDnbQndnBnBQfndQ
    MwMsNmNpmsrrwLssvsvpRpvQnCqbCCQfCfhhbDnqCfqLqn
    MFvtrmGMFwRmFvcvMFmsWSVHWVHNzgZWTtWSTPSZ
    wWNsHswfsWnVvNZvMLDRRpcLMBDnBlpR
    QFdhqzFbzmgbhzQhFSLRrpBBBRcRBcLldpWc
    SbmhzChGhqgQFFzqGJhwvtvNWCtVjVfwwZjHjT
    WHGDHBRQHDBBQpGzBzQlDVjPmmVtbqbLmtPtzvmZbb
    nchMhdMgCMJcwvLZvVcffjZfmq
    ndhghggCwSnhCnnTNSdBpFWQFNLFlpHQpDLRGl
    FZdjbqjjZTFbRHfVwgttfBZrBpBB
    LJQFJWhPPnQJJQCPQpzwphczchrgtrfBrf
    FFWvnlLGDGRMDHjm
    jCsCNZTTfjcQMLWTtvHQvG
    mgwdznllpRgBgpBDdnDDzBDmdrMHMLjtvvHJtLrWrHQWvQtv
    lgjDpVSppmqsqssVPZPf
    NcNwtChhScfPtwVRgmvWvWvNllVg
    nZGJMJLnqqGzLzrGQvlmmgrTmWWlcVvR
    LLdMzdssLZnMMbbZBJGsqLcjwjwPffpdtjFpFhPdFwjFFD
    wQvZHfbLjrMZSVWMZSdZ
    wwqhwtTRRpCCMmsnVlWGMpWM
    qBDcqBTBtJCBDqctRDCBCzDFLfbfLwvfbQcFHNvLvvfQjQ
    QDFwwvLJFjWQvWgGNnfNftCJPggP
    lpqdpqqrqBBpTTBsprpsTsbrNGPfCPzftfPMMGztfzNgNflM
    sqdpHrcbmTTHTdcspZNbZmDSQLQjhhSSWwvWWFHQvLLh
    gjQHjfqgVSqjqMSnCRMDMvCGZDvCNCNJ
    FnLswmdphJchhcZd
    bslwFmLTTbWWmlmbBLwlpBHPPBjqHjBSgPSSSfrVnzqQ
    JddrdBgJpChGfDLDDpcm
    WnSFqRhnjjWSSlSFWqTFVSLGbDLcbLDDvDLztbftVzcv
    nRWjsRjQFnQRshgwJCZwJrhw
    rnbZwrcZQdpsLpHDVWBBBgDv
    NNTSFCqJFMMMSJqTFFPttmNPlwgLvWvgWBffWlClLfvlVCVv
    TMTTJSJFRNwmjZsnGsrhnZZR
    CMZhZstZqlClJScfBrfHHHFWFFHh
    RwGdpjdGVGdmNHcfczpJWWpf
    dDJnQbdnwQdbggSPgPsnlqSn
    hnczBfznJFmzhnzJLLMwLjmQrppgCjqC
    HRRlrPRZSDtQjjPQNMPpPw
    ttlZHDRGRlRtGltTtGvcbnFrbvWJhvWhndcFWF
    hRsCqfRdqdqfqdtqmMmmZpStMTZZSTnp
    VjDDjWbzPFFwPRPFDjzLSnTMnZSGZMnWpLLmpL
    PVHFNBzDRbDwzjNNzHdvdHvlhhcHgvCglf
    cRLLzhRBhLhVLLLMnnRVVhtJgNgPJmPgPvDPJgvzvvNJJP
    lpFffHHWHbbMNPQgsgJJmW
    lpdplSpHSHlCCTbSpSFwdnLqMwcdBRRRLdRnth
    csZWwFFZbtbztcZttbnRbGlbJhqfnhlpnn
    mmTjjBLdSMQdBggQHNgTmjgJJRqRhCJphRHRRClGnhlWJJ
    MNMMNTmBLDmTLDSQmFDvvzwPWzsvDZFFcD
    fmflRfGcCtGDDbRCRlhCmmBJQsvBBWWvtWBnBJvLLvLn
    GFjdMMFGzVQvWWVWJQVJ
    wjTZzjrFTHgZjTFjMwGRcfRcqlbhcccrcmmlqC
    PvnvjHPnjRPPqvvnPqZNNWHTSdVDHwTLSDWDlTTTLl
    MJswhgppwspJpJsGbhchbcMlLLDQdVSgVldtSlSlSTdTld
    FwzwJzpfzzJRPZmPBvvmBF
    ZrJhslhhclDJhrDZllcGGrZnFCCWNMCHfsFbPddwdwWwCCfP
    BTjgvtBBSLqqBSLVzgTpBVMFHNPHwFbSwMPbMwbHMCPf
    fRtTppTjRJmrmJDR
    hJzcQcwMQhcQwZHVNmSmPCQZSm
    tpfvgWFFGGfRWFBqtPrHCmSwPPVPwgVgPC
    fpWBRqWqqGRpWWRpFWssMnLczJnnwcjscsJnLhbz
    HggzqvvrgtlrrHlQtvlJqFdfBLFJBbnfbBBdfBBfFd
    SVVmpZVsRLZGGZwRGZSTDWBbmBFBdFBnnFCnWnBfhB
    wpjVppVpZLRTGZQrrjjHNzcgvjrg
    GsMgMCFGMsbwbbSwwglS
    mJDMqRJzTRVdPWttPffZppBBfS
    dzcdqQcmQMGnHCsQ
    HlPgHwlHVwsVPPFVsNwzwLnmRmCCMcJcMRRLqGtRjCjJ
    dWhrWdDnmrrRMRct
    BZDvBpfTDDfBddWTZhDddWDQgwsFsHVvVHgHHznFQFznlQ
    FjmqFqJJGsBGGhsZdRDDRZZjTvdMdt
    NnHPngrPbPpbPfVvfCrnwccTwrRwTZdcdTZLwRTD
    lbbPvHWlHCNNnJzGJlQsJlsBBq
    mLNRpRDcDDCmCpzTcCPcNTTDrrnrPrPvjqtqhnhhhqQQjrhF
    dVMlVGgVSlGgWgsWSZlwtrHvqMjhnrhQjnBBqHqvhv
    WJfsVwZfJGfdLNmcmCcCtztf
    bBTtWQDMpDSjjznztCLd
    JhfZfrNPPwNJrhqRcJjfCCCzLSGLbGGjGznj
    RsPRZhwNbgbrgbBpBWWsQFvDMTDF
    rqLzTmqqMmmwrqwrJJwPTplhbRDphhdhDvnnhnRDnP
    ggfctFfSRNgZFBRVfFfWfZNSvjjvjCChpDhhDCCjdvlDDD
    NQfFRFgtffcGfcgZcfBqJrGLJJqLTwwmmHJrqz
    WVGJCltslWJsbbtNJbDJPMrPLBNLrpNjfqQQMMNr
    nTFnTmdRnTmmmdHZZnPQpLMfMZPMPqLZDqLf
    HRvRFRTvvvRmnvFcFRndcwVVJWWGbsJGwgttlCzJlGDg
    rfwdfLwLwwNdwbLcgCCTtFPvFPzWtWVtzvJF
    MpjqDDQQRmQjDspzTWWthVWRvRVRzn
    ZTQQQqlQZsqlrlgwNlgLcSdf
    QqBNgbNNJvcgnbBQQgJjQZSJWppPWsGpDpSGPpWTRDTp
    rrldddlrChLFpWPSSPWvPGCR
    fhFltdLhHwVfvgcZZqjzNNtQgt
    BMCMQZSMvSZSQTQTWvMSvrrTccgGRNljBFglGRgBVgFGRRGc
    ffmdmwdLbDJwFVNlGRRVVbRR
    dwJnJLfJwLhnPQSSNMvMqhMP
    RpQDDCHQwMRpwpNMCwpZhgZrPSqQdgrqPqPZqq
    zbtzmzzGbVzJSTScZqrthddT
    LVLJlLBnGnWNHMDRHnCCDh
    wQDcLhScLLBStHhctwVwsBjNTrssTjgNsgGCgssj
    fWblbRqMZWRffldFZpqWRbTCsPrsTNgnCQjgTrMGGgsr
    FZRpqdlWWbZZJJJppWWdHQVmLLDmzwDcLSVcQJLw
    DlllCDRlflQRsRnlCCBhzvLFVhJzJVzh
    jHjNNqdHqwNgpgqNcpgZwjZhJJbvdbPVhBbbvVvBvLzbPF
    cpcgSwWqgVnftSSTTf
    QmLZvjwwmDWFLNLqbqfF
    JJSBMBpdpgSBRBHJgdHBNVbsgqVlqfbVFVlqVFqb
    pCttfdCRMDCjhPDhmQ
    nDjnzdcDbDtGdcQTvssHssHbbfTq
    lVgRgpWCrMRVgVglRLjJmQFHqHHHsqFvFfTQsHSfMQ
    VrlpmWmgWppllLpPPWPWljPBntcnhdBNPhZBZhGdDd
    fQsRRfBHvRRjjvSgTwCTphdlphqBpn
    WJrDZbrNJZPWJcZmWLrrbPczpCnTddqdshqhDgTTwlwwTqhs
    brcPbZPcWGWssGtVfVMjFF
    GBZgqHhHGBZcLcGMjVJhrjrbStjbbb
    wTTNFPQpvDQTQLQvntRSbRJjVnrSDtJV
    TTwzQzPPTvmWLTTcdWfdGdZgfZHfZH
    VswNdtMgdsvQDJgdVNgQrrLlhrSCLflqfLrDnzLL
    RbjRbcZGTGpRbzrTqChtflhSnt
    mBjPRWpGcmBZGZpmZjtRbQQVwJgsPsQMsvNJdsVFdN
    TDmDTTThRDbbZtpTSnhRcFJMglldGdrJltgBMtMB
    jNjsWLqqqvzWswNqdccrFNBFMBlMrdMr
    LjjqwvsWCwjHwQHHTbDHbbRZmnRd
    qtnncCFCqjwjcDwnFQSGGRSBGBSvFdvrhR
    JPZzpgPJWNJBRhqSvQvBgB
    mZmJmMPWzmWmPLbmqTTJPfDHnHjCjflHjflfDcfMwC
    VfJrplTqzVVlVVlpfTMJfqDtWSLgbHgDjSHLgjHWjrjb
    vhGsRdsNRPRvvRhjSZjJLPDjDJttbZ
    GvGhQmhBnQNmnJGvhdFqBFVqcllqMBCMlVCc
    cnmsmmDCBDmcmvVnsVBtQQWWrrltQlrBfRHB
    hqphjLZFhMMjZQGQWGfftQWf
    JhFqhbjSLjMpqzJFbSLdFSggDwgmgcDVsVzVfvNvDvsm
    mRdspZZggmbJbpDcDJDqPhvvGvrnVqPqpzvVVV
    dSjSjQtwfQlLwjQSPrrqVqvGPGPVPjnP
    fMQtFQLHSfLtHFttHMflfwHWgFJsDbmJRDWdFBRJWmcbsJ
    lMMftpGHMntGtMMGpJnSPQvwzvvHscsdQscQsscQss
    hbfmWWLggVFjVVQdvbQvbcdzwbRR
    qZWFWTgTZhrLhLmWGlGGrSnJSNfGtSll
    QVGdmgVGLdllrGVgnZrdBvNvBSSjSvWtBHBqNNmv
    ThRjRFwpfTNBBqSBSSvT
    MFzbzfDjFFCCFJpRpFwbwJRnZndDgsZlgLrQLDgdlglZnD
    PjbDQvQPjbjjvtrQcpHBWnLfqnqGcHngnLdf
    VTwmMzMFnqHBwHBB
    lMTTNCzCZmClVVQjstQpPlprlHSp
    MtMqBtwFFsMRZMMZMjJGZR
    PHbpbPqHmVVCRGGCGRjv
    pdrrgdrqPbpzrHQbbqQPLHcQBsNtNnwzNhSFfhtfffFffwDs
    cPjpPcRJJVtSGGtJtffN
    CldrWrmDHnHnmWmTWsNzzfbbFNhtsbbNGGfb
    LCDTldCmnLLVwPVgQt
    NJpFrbpFZhlzhbzzqCtgMCgRbqCRMMtm
    dWcnntHQWcjRHHCVMqCsRg
    vLnQDvnGptrzLPwp
    dwTwTHwvZHqTrTRTlWtfzt
    GbFFbFBPnGQBQcQcLbPjFtCSrtgMMLrMfrrWgRgStr
    PnBnQhsGPQbnJRqwdRDwvJNDwq
    zzjWtnQRntzSBjZccmZmmC
    bdJdbdfJdFCGflfGwBJsmhmSMgmgcsmM
    qDbGDbvrFbbvGdvdffFdTTWQzrTWTLWLNnttLnCH
    WMMssTqCbpGzGSlmzLbG
    FVdwftRRVDZPcdZtZVRcjmvQSzzLrmlrclSGms
    DVfPFZDZRfVFPFHRPFRCphhMpCTHTsNgqHNWgn
    LzBGCRjHCnmnHzdzLLjHwGplflfrfPcgtflgLFLlcrcc
    hqhDMSSqWZsDMVWTVWmTcglglflFVflFrpPtggcv
    sshbJsTsqWMbqNWbhbzzjzGBQjCJQnzwmzBw
    QnpfLpbLfGbvgjHzjgmNRqbz
    SSMBMZDwMwFsqgSPPmHlHj
    BhMFJhMBddDMFcTdMVddrQfvrnCqnCffpqnVCLtC
    lhrTZNJZjCRjSCvRSlTSLlrvFnMHQhVDnqnmqqqmQqPDHmqF
    wcpGdtwtwzcbpzggCFPMqtMQmQqmVqHP
    bBfwgWbfwBdGpppGGGbcBsTRLlZTZsTRTsRNZClJsvZL
    nJLgNcQDNMlQHMvCbv
    zphFpmTszmwhGGFhhtppNfffVlvZvHCCVZzbfzvS
    mTTsmTRGstsFhWwtWjPRdjnJdjJnLjcLNd
    MfBDjllflHLTpDhhppDDbp
    NZBBnGJNnNPWTcTTmVhZCh
    PSzgSgwrnzrSzBGJSJrSLQqfMHQfqgRgfjHLljll
    RgbNmBbqgWHWRNRqHtcMlMwJJjcDtVlD
    SzpFLGPddSGnnSLQZLtJJcclDlVjDQwMhDcc
    LtTZCTttRqqqvqTN
""".trimIndent()